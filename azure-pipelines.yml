# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: Development
  displayName: Development
  jobs:
  - job: myJob
    timeoutInMinutes: 10
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - bash: echo "Hello world"
    - task: OctopusPack@4
      inputs:
        PackageId: 'products-service'
        PackageFormat: 'Zip'
        PackageVersion: '1.0.$(Build.BuildNumber)'
        SourcePath: 'java/products-microservice/target'
        Include: 'products-microservice-runner.jar'
        Overwrite: true
        
  - deployment: runcontainer
    displayName: Run Container
    workspace:
      clean: all
    environment:
      name: Development
      resourceType: VirtualMachine
      tags: web
    strategy:
      runOnce:
        deploy:
          steps:
          - bash: echo "Hello world"
- stage: Test
  displayName: Test
  jobs:  
  - job: waitForValidation
    displayName: Wait for external validation  
    pool: server    
    timeoutInMinutes: 4320 # job times out in 3 days
    steps:   
    - task: ManualValidation@0
      timeoutInMinutes: 1440 # task times out in 1 day
      inputs:
        notifyUsers: |
          test@test.com
          example@example.com
        instructions: 'Progress the deployment to the Test environment'
        onTimeout: reject
  - job: myJob
    timeoutInMinutes: 10
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - bash: echo "Hello world"
  - deployment: runcontainer
    displayName: Run Container
    workspace:
      clean: all
    environment:
      name: Test
      resourceType: VirtualMachine
      tags: web
    strategy:
      runOnce:
        deploy:
          steps:
          - bash: echo "Hello world"